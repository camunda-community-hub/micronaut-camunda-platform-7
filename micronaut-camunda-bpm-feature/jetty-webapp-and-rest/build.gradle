plugins {
    id("org.jetbrains.kotlin.jvm")
    id("org.jetbrains.kotlin.kapt")
    id("org.jetbrains.kotlin.plugin.allopen")
    id("io.micronaut.application")
}

micronaut {
    runtime("jetty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("micronaut.camunda.bpm.feature.test.*")
    }
}

dependencies {
    testImplementation(project(":micronaut-camunda-bpm-feature"))
    testRuntimeOnly("com.h2database:h2")
    testRuntimeOnly("ch.qos.logback:logback-classic")

    kaptTest(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    kaptTest("io.micronaut.data:micronaut-data-processor")
    kaptTest("io.micronaut:micronaut-inject-java:$micronautVersion")

    testCompileOnly("io.micronaut.servlet:micronaut-http-server-jetty")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("org.assertj:assertj-core")
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("org.eclipse.jetty:jetty-server:$jettyVersion")
    testImplementation("org.eclipse.jetty:jetty-servlet:$jettyVersion")
}

application {
    mainClass.set("info.novatec.micronaut.camunda.bpm.feature.test.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
}

tasks {
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
}
